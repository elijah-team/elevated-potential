/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // http://web.archive.org/web/20230831025430/https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:case-for-maven-local
    mavenLocal()

    maven { url = uri('https://repo.maven.apache.org/maven2/') }

    maven {
        url = uri('https://gitlab.com/api/v4/projects/52599914/packages/maven')
        name = "https://gitlab.com/elijah-team/elijah-core-api"
    }
//    maven {
//        url = uri('https://gitlab.com/api/v4/projects/10309690/packages/maven')
//        name = "https://gitlab.com/elijah-team/elijah-lang"
//    }
    maven {
        url = uri('https://gitlab.com/api/v4/projects/20346374/packages/maven')
        name = "https://gitlab.com/tripleo1/buffers"
    }
    maven {
        url = uri('https://gitlab.com/api/v4/projects/21223510/packages/maven')
        name = "https://gitlab.com/Tripleo/range"
    }
}

dependencies {

    // README This was added as a submodule somewhere else
    // api 'com.github.dritter-hd:dlog:1.0.0'
    api 'javax.annotation:javax.annotation-api:1.3.2'
    api 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.700'
    api 'org.jetbrains:annotations:24.0.1'

    api 'org.apache.commons:commons-lang3:3.12.0'
    api 'org.slf4j:slf4j-simple:2.0.7'
    api 'org.slf4j:slf4j-api:2.0.7'
    api 'org.jdeferred.v2:jdeferred-core:2.0.0'

    api 'com.github.spotbugs:spotbugs-annotations:4.7.3'
    api 'com.google.guava:guava:32.0.0-jre'

    api 'tripleo.buffers:buffers-v1:0.0.3'
    api 'tripleo.util.range:range-v1:0.0.3b'

    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'junit:junit:4.13.2'
    compileOnly 'org.projectlombok:lombok:1.18.30'
}

group = 'tripleo.elijah'
version = '0.91.1-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
